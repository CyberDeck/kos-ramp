// Stolen from http://pastebin.com/fq3nqJ2P
// As contributed to Reddit at http://www.reddit.com/r/Kos/comments/2zehw6/help_calculating_time_to_andn/

SET TARGET_INCLINATION TO TARGET:OBT:INCLINATION.

SET CURRENT_TIME TO TIME:SECONDS.
SET SHIP_ORBIT_NORMAL TO VCRS(SHIP:VELOCITY:ORBIT,POSITIONAT(SHIP,TIME:SECONDS)-SHIP:BODY:POSITION).
SET TARGET_ORBIT_NORMAL TO VCRS(TARGET:VELOCITY:ORBIT,TARGET:POSITION-SHIP:BODY:POSITION).
SET LINEOFNODES TO VCRS(SHIP_ORBIT_NORMAL,TARGET_ORBIT_NORMAL).
SET ANGLE_TO_NODE TO VANG(POSITIONAT(SHIP,CURRENT_TIME)-SHIP:BODY:POSITION,LINEOFNODES).
SET ANGLE_TO_NODE2 TO VANG(POSITIONAT(SHIP,CURRENT_TIME+5)-SHIP:BODY:POSITION,LINEOFNODES).
SET ANGLE_TO_OPPOSITE_NODE TO VANG(POSITIONAT(SHIP,CURRENT_TIME)-SHIP:BODY:POSITION,-1*LINEOFNODES).
SET RELATIVE_INCLINATION TO VANG(SHIP_ORBIT_NORMAL,TARGET_ORBIT_NORMAL).
SET ANGLE_TO_NODE_DELTA TO ANGLE_TO_NODE2-ANGLE_TO_NODE.

SET SHIP_ORBITAL_ANGULAR_VEL TO (SHIP:VELOCITY:ORBIT:MAG / (BODY:RADIUS+SHIP:ALTITUDE))  * (180/CONSTANT():PI).
SET TIME_TO_NODE TO ANGLE_TO_NODE / SHIP_ORBITAL_ANGULAR_VEL.
SET TIME_TO_OPPOSITE_NODE TO ANGLE_TO_OPPOSITE_NODE / SHIP_ORBITAL_ANGULAR_VEL.
SET TIME_TO_NODE_MINUTES TO FLOOR((TIME_TO_NODE)/60).
SET TIME_TO_NODE_SECONDS TO (((TIME_TO_NODE)/60)-TIME_TO_NODE_MINUTES)*60.
SET TIME_TO_OPPOSITE_NODE_MINUTES TO FLOOR((TIME_TO_OPPOSITE_NODE)/60).
SET TIME_TO_OPPOSITE_NODE_SECONDS TO (((TIME_TO_OPPOSITE_NODE)/60)-TIME_TO_OPPOSITE_NODE_MINUTES)*60.

local T is time:seconds.

if ANGLE_TO_NODE_DELTA < 0 {
	set T to (time + time_to_node):seconds.
} else {
	set T to (time + time_to_opposite_node):seconds.
}

local v is velocityat(ship, T):orbit.
local dv is 2 * v:mag * sin(relative_inclination / 2).

if v:y > 0 {
  // burn anti-normal at ascending node
  set nd to node(T, 0, -dv, 0).
} else {
  // burn normal at descending node
  set nd to node(T, 0, dv, 0).
}

add nd.
